{"version":3,"file":"static/js/936.0eb390ba.chunk.js","mappings":"4LACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAyF,2BAAzF,EAAiI,+B,SCEpHA,EAAa,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAwB,IAAhBC,KAAAA,OAAgB,MAAT,GAAS,EAC3CC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,eAAIC,UAAWC,EAAf,SACKL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACR,SAAC,KAAD,CAAeC,GAAE,UAAKT,GAAL,OAAYM,GAAMI,MAAO,CAAEC,KAAMV,GAAlD,UACI,gBAAIE,UAAWC,EAAf,WACG,gBAAMD,UAAWC,EAAYQ,IAC5BJ,EACM,kCAAoCA,EACpC,6EACRK,IAAKN,KACFC,IAAe,cAAGL,UAAWC,EAAd,SAA+BG,QAP5CD,EADH,KAcvB,C,+ICrBD,EAAwB,oB,SCKT,SAASQ,IACpB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAwBA,IAvBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,sGAEtBF,EAAU,WAFY,UAGCG,EAAAA,EAAAA,MAHD,mBAIF,KADZC,EAHc,EAGdA,MACCC,OAJa,wBAKlBC,MAAM,kDACNN,EAAU,YANQ,2BAStBA,EAAU,YACVF,EAAkBM,EAAKG,SAVD,yDAatBC,QAAQC,IAAR,MACAT,EAAU,YAdY,6EAAH,qDAmBvBE,GAEH,GAAE,IACoB,OAAnBL,EAIJ,OACI,6BACI,eAAIb,UAAWC,EAAf,4BACCY,EAAeQ,OAAS,IACrB,SAAC1B,EAAA,EAAD,CAAYC,OAAQiB,EAAgBhB,KAAM,YAElC,YAAXkB,IAAwB,SAACW,EAAA,EAAD,MAGpC,C","sources":["webpack://react-homework-template/./src/components/ListMovies/ListMovies.module.css?08bb","components/ListMovies/ListMovies.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListMovies_list__jtcUy\",\"item\":\"ListMovies_item__lLotJ\",\"poster\":\"ListMovies_poster__KfqR0\",\"noImgTitle\":\"ListMovies_noImgTitle__mpiqB\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './ListMovies.module.css'\nexport const ListMovies = ({ movies, path = '' }) => {\n    const location = useLocation()\n\n    return (\n        <ul className={css.list}>\n            {movies.map(({ id, title, poster_path }) => (\n                <Link key={id} to={`${path}${id}`} state={{ from: location }}>\n                    <li className={css.item}>\n                       <img  className={css.poster} src={\n                        poster_path\n                            ? 'https://image.tmdb.org/t/p/w300' + poster_path\n                            : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                    } alt={title} /> \n                       {!poster_path && <p className={css.noImgTitle}>{title}</p>}   \n                  </li>\n               </Link>\n            ))}\n        </ul>\n    )\n}\nListMovies.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n    path: PropTypes.string,\n}","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\",\"stripes\":\"Home_stripes__GQa5l\"};","import {useEffect, useState} from 'react'\nimport { ListMovies } from \"components/ListMovies/ListMovies\"\nimport { Loader } from \"components/Loader/Loader\";\nimport { fetchTrendingMovie } from '../../api/movieApi';\nimport css from 'pages/Home/Home.module.css';\n\nexport default function Home  ()  {\n    const [trendingMovies, setTrendingMovies] = useState([])\n    const [status, setStatus] = useState('idle')\n    useEffect(() => {\n        const getTrendingMovies = async () => {\n            try {\n            setStatus('pending')\n            const { data } = await fetchTrendingMovie();\n            if (data.length === 0) {\n                alert('Ooops, someting went wrong. Please, try again.')\n                setStatus('rejected')\n                return\n            }\n            setStatus('resolved')\n            setTrendingMovies(data.results)\n          \n        } catch (err) {\n            console.log(err)\n            setStatus('rejected');\n            return\n      }\n    \n        }\n        getTrendingMovies()\n     \n    }, [])\n    if (trendingMovies === null) {\n        return\n    }\n    \n    return (\n        <main>\n            <h1 className={css.title}>Trending today</h1>\n            {trendingMovies.length > 0 && (\n                <ListMovies movies={trendingMovies} path={'movies/'}/>\n            )}\n            {status === 'pending' && <Loader/>}\n        </main>\n    )\n}"],"names":["ListMovies","movies","path","location","useLocation","className","css","map","id","title","poster_path","to","state","from","src","alt","Home","useState","trendingMovies","setTrendingMovies","status","setStatus","useEffect","getTrendingMovies","fetchTrendingMovie","data","length","alert","results","console","log","Loader"],"sourceRoot":""}